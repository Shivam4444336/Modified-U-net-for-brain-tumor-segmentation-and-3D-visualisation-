# -*- coding: utf-8 -*-
"""Inference&3D visualization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aZ1FfoomJuTLwDKf8vNFOA0UA92cBC_6
"""

#inference and 3D visualization script per sample
import numpy as np
import trimesh
import h5py
from skimage import measure
from stl import mesh

a = h5py.File('/content/drive/MyDrive/BraTS2020_training_data/volume_'+str(val_Id[1]), 'r')
data = np.array(a['data'])
data = np.swapaxes(data,0,1)
#Flair matching
data[:,:,:,0] = hist_match(data[:,:,:,0],target[:,:,:,0])
#T1 weighted matching
data[:,:,:,1] = hist_match(data[:,:,:,1],target[:,:,:,1])

output = modified_u_net(np.expand_dims(data,0))
for k in range(3):
  verts, faces, normals, values = measure.marching_cubes_lewiner(output[0,:,:,:,k])
  mesh_object = np.zeros(faces.shape[0],dtype=mesh.Mesh.dtype)
  tumor_mesh_object = mesh.Mesh(mesh_object,remove_empty_areas=False)
  for i,f in enumerate(faces):
    for j in range(3):
      tumor_mesh_object.vectors[i][j] = verts[f[j]]
  tumor_mesh_object.save('/content/tumor_mesh_predicted'+str(k)+'.stl')
tumormesh = trimesh.load('/content/tumor_mesh_predicted0.stl')
tumormesh.show()
